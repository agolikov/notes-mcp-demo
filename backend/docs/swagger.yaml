basePath: /
definitions:
  mcp_demo_models_requests.CreateNoteRequest:
    properties:
      content:
        type: string
      tags:
        items:
          type: string
        type: array
      title:
        type: string
    required:
    - content
    - title
    type: object
  mcp_demo_models_requests.UpdateNoteRequest:
    properties:
      content:
        type: string
      tags:
        items:
          type: string
        type: array
      title:
        type: string
    required:
    - content
    - title
    type: object
  mcp_demo_models_responses.ErrorResponse:
    properties:
      error:
        type: string
    type: object
  mcp_demo_models_responses.NoteResponse:
    properties:
      content:
        type: string
      created_at:
        type: string
      id:
        type: string
      tags:
        items:
          type: string
        type: array
      title:
        type: string
      updated_at:
        type: string
    type: object
host: localhost:8080
info:
  contact:
    email: support@swagger.io
    name: API Support
    url: http://www.swagger.io/support
  description: API Server for Entry Point Application
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
  termsOfService: http://swagger.io/terms/
  title: Entry Point API
  version: "1.0"
paths:
  /notes:
    get:
      description: Retrieve all notes
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/mcp_demo_models_responses.NoteResponse'
            type: array
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/mcp_demo_models_responses.ErrorResponse'
      summary: Get all notes
      tags:
      - notes
    post:
      consumes:
      - application/json
      description: Create a new journal note
      parameters:
      - description: Note data
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/mcp_demo_models_requests.CreateNoteRequest'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/mcp_demo_models_responses.NoteResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/mcp_demo_models_responses.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/mcp_demo_models_responses.ErrorResponse'
      summary: Create a new note
      tags:
      - notes
  /notes/{id}:
    delete:
      description: Delete an existing note
      parameters:
      - description: Note ID
        in: path
        name: id
        required: true
        type: string
      responses:
        "204":
          description: No Content
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/mcp_demo_models_responses.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/mcp_demo_models_responses.ErrorResponse'
      summary: Delete a note
      tags:
      - notes
    get:
      description: Retrieve a specific note by its ID
      parameters:
      - description: Note ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/mcp_demo_models_responses.NoteResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/mcp_demo_models_responses.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/mcp_demo_models_responses.ErrorResponse'
      summary: Get a note by ID
      tags:
      - notes
    put:
      consumes:
      - application/json
      description: Update an existing note
      parameters:
      - description: Note ID
        in: path
        name: id
        required: true
        type: string
      - description: Updated note data
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/mcp_demo_models_requests.UpdateNoteRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/mcp_demo_models_responses.NoteResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/mcp_demo_models_responses.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/mcp_demo_models_responses.ErrorResponse'
      summary: Update a note
      tags:
      - notes
swagger: "2.0"
